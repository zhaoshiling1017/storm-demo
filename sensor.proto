// See README.txt for information and build instructions.

syntax = "proto2";

package sensor;

message TCPFLOW{
  required string serial_num=1;
  required string status=2;
  required string stime=3;
  required string dtime=4;
  optional string sip=5;
  optional string sipv6=6;
  required int32  sport=7;
  optional string dip=8;
  optional string dipv6=9;
  required int32  dport=10;
  required string proto=11;
  required uint64 uplink_length=12;
  required uint64 downlink_length=13;
  required string client_os=14;
  required string server_os=15;
  required string src_mac=16;
  required string dst_mac=17;
  required string up_payload=18;
  required string down_payload=19;
  required string summary=20;
  optional int32 uplink_pkts=21;
  optional int32 downlink_pkts=22;
  optional string access_time=23;
  optional string vendor_id=24;
  optional string device_ip=25;
  optional int32 app_type=26;  // 应用类型
  optional string mpls_label=27;
}

message DNS{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required int32  dns_type=9;
  optional int32  reply_code=10;
  optional string count=11;
  required string host=12;
  repeated string addr=13;
  repeated string cname=14;
  repeated string mx=15;
  repeated string txt=16; 
  optional string vendor_id=17;
  optional string device_ip=18; 
  optional string mpls_label=19;
}

message WEBLOG{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required bytes uri=9;  // Should be "required", Later will calculate md5
  required string host=10;// Should be "required", Later will calculate md5
  optional string origin=11;
  optional string cookie=12;
  optional string agent=13;
  optional string referer=14;
  optional string xff=15;
  required bytes data=16;
  required string method=17;
  optional int32 status=18;
  optional string setcookie=19;
  optional string content_type=20;
  optional string accept_language=21;
  optional string vendor_id=22;
  optional string device_ip=23;
  optional int32 urlcategory=24; // url分类结果  
  optional string mpls_label=25;
}

message FILE_BEHAVIOR{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  optional bytes uri=10;	// HTTP.Should be "required", Later will calculate md5
  optional string host=11;	// HTTP.Should be "required", Later will calculate md5
  optional string status=12;    // HTTP
  optional int32  file_dir=13;	// HTTP
  optional string referer=14;	// HTTP
  optional string trans_mode=15;// FTP
  required string filename=16;
  required string mime_type=17;
  required string file_md5=18;
  optional string method=19;
  optional string vendor_id=20;
  optional string device_ip=21;
  optional string mpls_label=22;
}

message FILE_SANDBOX{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  optional string host=10;   	// HTTP
  optional bytes uri=11;    	// HTTP
  optional string status=12;	// HTTP
  optional string trans_mode=13;// FTP
  required string filename=14;
  required string file_md5=15;
  required string mime_type=16;
  optional int32  file_dir=17;	// HTTP
  optional string referer=18;	// HTTP
  optional string method=19;
  optional string vendor_id=20;
  optional string device_ip=21;
  optional string mpls_label=22;
}

message MAIL_BEHAVIOR{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  sport=8;
  required int32  dport=9;
  optional string mid=10; // WEBMAIL
  required string time=11;
  required string mail_from=12;
  required string to=13;
  required string cc=14;
  required string subject=15;
  required string plain=16;

  message mail_attachment{
    required string attach_md5=1;
    required string mime_type=2;
    required string name=3;
  }
  repeated mail_attachment attachment=17;
  optional string references=18;
  optional string bcc=19;
  optional string returnpath=20;
  repeated string received=21;
  optional string vendor_id=22;
  optional string device_ip=23;
  optional string mpls_label=24;
}

message MAIL_SANDBOX{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  required string time=10;
  required string mail_from=11;
  required string to=12;
  required string cc=13;
  required string subject=14;
  required string attach_md5=15;
  required string attach_name=16;
  required string mime_type=17;
  optional string bcc=18;
  optional string returnpath=19;
  repeated string received=20;
  optional string vendor_id=21;
  optional string device_ip=22;
  optional string mpls_label=23;
}

message LOGIN{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string proto=9;
  required string passwd=10;
  required string info=11;
  required string user=12;
  optional string db_type=13;
  optional string normal_ret=14;
  optional string vendor_id=15;
  optional string device_ip=16;
  optional string mpls_label=17;
}

message DB{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string proto=9;
  required string version=10;
  required string db_type=11;
  required string user=12;
  required string db_name=13;
  required string ret_code=14;
  required string sql_info=15;
  optional string normal_ret=16;
  optional string vendor_id=17;
  optional string device_ip=18;
  optional string mpls_label=19;
}

message ATTACK{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string host=9;
  required string content=10;
  required string pattern=11;
  required string attack_type=12;
  optional bytes uri = 13;
  optional string vendor_id=14;
  optional string device_ip=15;
  optional string mpls_label=16;
}

message LDAP{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  required string user=10;
  required string version=11;
  required string op=12;
  required string info=13;
  optional string vendor_id=14;
  optional string device_ip=15;
  optional string mpls_label=16;
}

message SSL{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string version=9;
  required string session_id=10;
  required string server_name=11;

  message SSL_CERT{
    required string issuer_name=1;
    required string notafter=2;
    required string notbefore=3;
    required string public_key=4;
  }
  repeated SSL_CERT cert=12;
  required string user_name=13;
  optional string vendor_id=14;
  optional string device_ip=15;
  optional string mpls_label=16;
}

message FTP_OP{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  required string user=10;
  required int32  seq=11;
  required string op=12;
  repeated string ret=13;
  optional string vendor_id=14;
  optional string device_ip=15;
  optional string mpls_label=16;
}

message SNORT{
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string event_id=9;
  required string priority=10;
  required string proto=11;
  required string warn_info=12;
  required string classification=13;
  optional string vendor_id=14;
  optional string device_ip=15;
  optional string mpls_label=16;
}

message UDPFLOW{
  required string serial_num=1;
  required string stime=2;
  required string dtime=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  required uint64 uplink_length=10;
  required uint64 downlink_length=11;
  required int32  uplink_pkts=12;
  required int32  downlink_pkts=13;
  required string up_payload=14;
  required string down_payload=15;
  required string src_mac=16;
  required string dst_mac=17;
  required string proto=18;
  optional string access_time=19;
  optional string vendor_id=20;
  optional string device_ip=21;
  optional int32 app_type=22;  // 应用类型
  optional string mpls_label=23;
}

message WEBSHELL_DOLOG
{
  required string serial_num=1;
  required int32 rule_id=2;
  optional string sip=3;
  required int32 sport=4;
  optional string dip=5;
  required int32 dport=6;
  required string host=7;
  optional bytes url=8;
  required string file_md5=9;
  optional bytes file=10;
  optional bytes attack_type=11;
  required string file_dir=12;
  required string victim_type=13;
  required string attack_flag=14;
  optional string attacker=15;
  optional string victim=16;
  optional int32 write_date=17;
  required int32 severity=18;
  optional int32 confidence=19;
  optional string detail_info=20;
  optional string webrules_tag=21;
  optional string attack_desc=22;
  optional string attack_harm=23;
  optional string rule_name=24;
  optional string kill_chain=25;
  optional string attack_result=26;
  optional string vendor_id=27;
  optional string device_ip=28;
  optional string mpls_label=29;
}

message WEBATTACK_DOLOG
{
  required string serial_num=1;
  required int32 rule_id=2;
  required string rule_name=3;  
  required int32 dolog_count=4;
  required int32 severity=5;
  required int32 rule_version=6;           
  optional string sip=7;        
  optional string dip=8;              
  optional int32 sport=9;                 
  optional int32 dport=10;         
  optional string method=11;                 
  optional string host=12;                 
  optional bytes uri=13;                  
  optional string file_name=14;               
  optional string referer=15;               
  optional string agent=16;                
  optional string cookie=17;                 
  optional string parameter=18;            
  optional bytes req_header=19;          
  optional string req_body=20;             
  optional int32 rsp_status=21;             
  optional int32 rsp_content_length=22; 
  optional string rsp_content_type=23;  
  optional bytes rsp_header=24;             
  optional bytes rsp_body=25;
  optional int32 rsp_body_len=26;    
  required string victim_type=27;
  required string attack_flag=28;
  optional string attacker=29;
  optional string victim=30;
  optional int32 write_date=31;
  optional bytes attack_type=32;
  optional int32 confidence=33;
  optional string detail_info=34;
  optional string solution=35;
  optional string vuln_desc=36;
  optional string vuln_harm=37;
  optional string vuln_name=38;
  optional string vuln_type=39;
  optional string webrules_tag=40;
  optional string public_date=41;
  optional string code_language=42;
  optional string site_app=43;
  optional string kill_chain=44;
  optional string attack_result=45;
  optional string vendor_id=46;
  optional string device_ip=47;
  optional string mpls_label=48;
}

message IDS_DOLOG
{
  required string serial_num=1;
  required int32 rule_id=2;
  required string rule_name=3;
  optional int32 packet_size=4;
  optional bytes packet_data=5;
  optional string sip=6;
  optional string dip=7;
  optional int32 sport=8;
  optional int32 dport=9;
  optional int32 appid=10;
  optional int32 protocol_id=11;
  optional bytes description=12;
  optional int32 write_date=13;
  optional int32 severity=14;
  optional string vuln_type=15;
  optional string attack_method=16;
  optional string detail_info=17;
  optional string bulletin=18;
  optional string affected_system=19;
  optional string info_id=20;
  required string victim_type=21;
  required string attack_flag=22;
  optional string attacker=23;
  optional string victim=24;
  required int32 sig_id=25;
  optional int32 confidence=26;
  optional string webrules_tag=27;
  optional string rule_version=28;
  optional string cnnvd_id=29;
  optional string kill_chain=30;
  optional string attack_result=31;
  optional bytes attack_type=32;
  optional string vendor_id=33;
  optional string device_ip=34;
  optional string mpls_label=35;
}

message PROPERTY
{
	required string serial_num=1;
	optional string mac=2;
	optional string ip=3;
	optional string proto=4;
	optional int32  port=5;
	optional string type=6;        //property tyep
	optional string os=7;
	optional string os_version=8;
	optional string app=9;
	optional string app_version=10;
	optional string banner_info=11;
	optional string web_banner=12;
	optional string create_time=13; //first seen time
	optional string source_ip=14;   //property device ip(manage ip)
	optional string source_type=15; //property type is from flow or user define
	optional string mpls_label=16;
}

message IOC_DOLOG
{
    required uint64 access_time         = 1;    // 日志发生时间，毫秒
    required uint64 tid                 = 2;    // 对应Xml中tid
    required string type                = 3;    // 对应Xml中type
    required string rule_desc           = 4;    // 报警名称，对应xml中alert_name
    required string offence_type        = 5;
    required string offence_value       = 6;
    required string sip                 = 7;
    required string dip                 = 8;
    optional int32  severity            = 9;    // 对应xml中的risk
    required string serial_num          = 10;   // 传感器的设备序列号
    optional string rule_state          = 11;   // 对应xml文件中confidence，需要转换  low：white，medium：gray，high：green
    required string ioc_type            = 12;   // 对应xml中type
    required string ioc_value           = 13;   // 对应xml中rule
    required string nid                 = 14;   // IOC的唯一表示，对应xml中id
    optional string etime               = 15;
    required string malicious_type      = 16;   // 威胁类型
    required string kill_chain          = 17;
    optional string xml_confidence          = 18;   // 置信度，对应xml文件中confidence
    required string malicious_family    = 19;   // 恶意家族 对应xml中name
    optional string campaign            = 20;   // 攻击事件/团伙
    optional bool   targeted            = 21;   // 定向攻击 True/False
    repeated string tag                 = 22;   // 对应xml中tags
    repeated string platform            = 23;   // 对应xml中platform
    optional string current_status      = 24;
    optional string packet_data         = 25;
    required uint32 ioc_source      = 26; //0:CLOUD_SEND;1:SELF_DEF
    required uint32 sport               = 27;
    required uint32 dport               = 28;
    required string proto               = 29;
    optional uint32 dns_type          = 30;  //0: REQUEST; 1: RESPONSE
    optional string filename            = 31;
    optional string file_md5            = 32;
    optional string desc                = 33;   //对应xml中description
    optional uint32 file_direction=34;  //0: UPLOAD; 1: DOWN
    optional string host                = 35;
    optional string uri                 = 36;
    optional string dns_arecord         = 37;
    required string tproto              = 38;
    optional string file_content        = 39;
    optional string attack_ip           = 40;
    optional string victim_ip           = 41;
    optional bytes attack_type          = 42;
    optional string vendor_id           = 43;
    optional string device_ip           = 44;
	optional string mpls_label			= 45;
}

message ABNORMAL_PKT {
  required string serial_num=1;
  required string access_time=2;
  required string abnormal_type=3;
  optional string sip=4;
  optional string sipv6=5;
  optional int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  optional int32  dport=9;
  optional string payload=10;
  optional int32 payloadlen=11;
  optional string abnormal_info=12;
  optional string vendor_id=13;
  optional string device_ip=14;
  optional string mpls_label=15;
}

message REDIRECT {
  required string serial_num=1;
  required string access_time = 2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required string block_object = 9;
  required string block_type = 10;
  required string block_method = 11;
  optional string block_name = 12;
  optional string vendor_id = 13;
  optional string device_ip = 14;
  optional string mpls_label=15;
}

message TELNET_CMD{
  required string serial_num=1;
  required string proto=2;
  required string access_time=3;
  optional string sip=4;
  optional string sipv6=5;
  required int32  sport=6;
  optional string dip=7;
  optional string dipv6=8;
  required int32  dport=9;
  required string user=10;
  required string cmd=11;
  required string ret=12;
  optional string vendor_id=13;
  optional string device_ip=14;
  optional string mpls_label=15;
}

message INTELLIGENCE {
  required string serial_num=1;
  required string access_time=2;
  optional string sip=3;
  optional string sipv6=4;
  required int32  sport=5;
  optional string dip=6;
  optional string dipv6=7;
  required int32  dport=8;
  required int32  app_type=9;
  required string app_data=10; // 具体应用情报数据
  optional string vendor_id=11;
  optional string device_ip=12;
  optional string mpls_label=13;
}

message SENSOR_LOG {
  required int32 message_type=1;
  optional TCPFLOW skyeye_tcpflow=2;
  optional DNS  	skyeye_dns=3;
  optional WEBLOG  	skyeye_weblog=4;
  optional FILE_BEHAVIOR skyeye_file=5;
  optional MAIL_BEHAVIOR skyeye_mail=6;
  optional LOGIN	skyeye_login=7;
  optional DB		skyeye_sql=8;
  optional ATTACK	skyeye_attack=9;
  optional LDAP 	skyeye_ldap=10;
  optional SSL		skyeye_ssl=11;
  optional FTP_OP	skyeye_ftpop=12;
  optional FILE_SANDBOX skyeye_file_sandbox=13;
  optional MAIL_SANDBOX skyeye_mail_sandbox=14;
  optional SNORT        skyeye_snort=15;
  optional UDPFLOW     skyeye_udpflow=16;
  optional WEBSHELL_DOLOG  skyeye_webshell=17;
  optional WEBATTACK_DOLOG skyeye_webattack=18;
  optional IDS_DOLOG       skyeye_ids=19;
  optional ABNORMAL_PKT skyeye_abnormal=20;
  optional REDIRECT skyeye_redirect=21;
  optional TELNET_CMD   skyeye_telnetcmd=22;
  optional IOC_DOLOG       skyeye_ioc=23;
  optional INTELLIGENCE  skyeye_intelligence=24;
  optional PROPERTY skyeye_property=25;
}


